record GameInterface : Set₁ where
  field 

  -- abstract types

    Board         : Set
    FinishedBoard  : Set
    UndoableBoard : Set

  -- operations

    emptyBoard      : Board
    isEmpty         : Board → Bool
    currentPlayer   : Board → Color

    getResult       : FinishedBoard → Result

    canUndo?        : Board         → Maybe UndoableBoard
    undoFin         : FinishedBoard  → UndoableBoard
    undo            : UndoableBoard → Board

    validMoves      : Board → List Move
    isMovePossible? : Board → Move → Bool
    makeMove        : (b : Board) → (m : Move) → m ∈ validMoves b → Board ⊎ FinishedBoard
  
  -- properties

    empty-is-empty   : isEmpty emptyBoard       ≡ true
    starting-player  : currentPlayer emptyBoard ≡ X
    no-undo-empty    : canUndo? emptyBoard      ≡ nothing

    valid-possible-l : ∀ (b : Board) (m : Move) → isMovePossible? b m ≡ true → m ∈ validMoves b
    valid-possible-r : ∀ (b : Board) (m : Move) → m ∈ validMoves b → isMovePossible? b m ≡ true

    undo-make-move   : ∀ {b b' m} → (vld : m ∈ validMoves b) → makeMove b m vld ≡ inj₁ b' 
                                  → ∃ (λ undoableBoard → (canUndo? b' ≡ just undoableBoard) × (undo undoableBoard ≡ b))
